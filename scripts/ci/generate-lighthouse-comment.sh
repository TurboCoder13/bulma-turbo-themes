#!/bin/bash
# Generate Lighthouse PR comment with scores and report links
# Usage: generate-lighthouse-comment.sh
# Environment variables:
#   - GITHUB_RUN_ID: GitHub Actions run ID for artifact links
#   - GITHUB_SHA: Current commit SHA
#   - GITHUB_REPOSITORY: GitHub repository (owner/repo)
# Reads from lighthouse-reports directory and extracts metrics

set -euo pipefail

# Get run ID from environment or GitHub context
RUN_ID="${GITHUB_RUN_ID:=unknown}"
COMMIT_SHA="${GITHUB_SHA:=unknown}"
REPO="${GITHUB_REPOSITORY:=unknown}"

# Initialize comment
{
  echo "## 📊 Lighthouse CI Performance Report"
  echo ""

  # Check if lighthouse results exist
  if [ -d "lighthouse-reports" ] && [ -n "$(ls -A lighthouse-reports 2>/dev/null)" ]; then
    # Find and parse the most recent Lighthouse JSON report
    LATEST_REPORT=$(find lighthouse-reports -name "*.json" -type f | grep -v manifest | sort -r | head -1)
    
    if [ -n "$LATEST_REPORT" ]; then
      # Extract scores using jq if available
      if command -v jq &> /dev/null; then
        PERFORMANCE=$(jq '.categories.performance.score * 100 | round' "$LATEST_REPORT" 2>/dev/null || echo "N/A")
        ACCESSIBILITY=$(jq '.categories.accessibility.score * 100 | round' "$LATEST_REPORT" 2>/dev/null || echo "N/A")
        BEST_PRACTICES=$(jq '.categories["best-practices"].score * 100 | round' "$LATEST_REPORT" 2>/dev/null || echo "N/A")
        SEO=$(jq '.categories.seo.score * 100 | round' "$LATEST_REPORT" 2>/dev/null || echo "N/A")
      else
        PERFORMANCE="N/A"
        ACCESSIBILITY="N/A"
        BEST_PRACTICES="N/A"
        SEO="N/A"
      fi

      # Create score badges with color coding
      format_score() {
        local score=$1
        if [ "$score" != "N/A" ]; then
          if [ "$score" -ge 90 ]; then
            echo "🟢 $score"
          elif [ "$score" -ge 80 ]; then
            echo "🟡 $score"
          else
            echo "🔴 $score"
          fi
        else
          echo "⚪ $score"
        fi
      }

      echo "### ✅ Status: Performance Analysis Complete"
      echo ""
      echo "**Build:** ✅ Lighthouse CI passed"
      echo ""
      echo "### 📈 Performance Scores"
      echo ""
      echo "| Category | Score |"
      echo "|----------|-------|"
      echo "| Performance | $(format_score "$PERFORMANCE") |"
      echo "| Accessibility | $(format_score "$ACCESSIBILITY") |"
      echo "| Best Practices | $(format_score "$BEST_PRACTICES") |"
      echo "| SEO | $(format_score "$SEO") |"
      echo ""

      # Check if there are assertion failures logged
      if [ -f ".lighthouseci/runs.json" ]; then
        echo "### ⚠️ Assertion Details"
        echo ""
        echo '```'
        # Extract assertion information from Lighthouse CI output
        if command -v jq &> /dev/null; then
          jq -r '.[] | select(.assertionResults) | .assertionResults[] | select(.level != "pass") | "\(.url): \(.assertion) - expected: >=\(.expected), found: \(.actual)"' ".lighthouseci/runs.json" 2>/dev/null || true
        fi
        echo '```'
        echo ""
      fi
      
      echo "### 📋 View Full Reports"
      echo ""
      if [ "$REPO" != "unknown" ]; then
        echo "**Public Report:**"
          echo "- 🔗 [📊 View Lighthouse Reports](https://turbocoder13.github.io/bulma-turbo-themes/lighthouse-reports/)"
        echo ""
        echo "**Or download from artifacts:**"
        echo "- 📥 [Download from GitHub Actions](https://github.com/$REPO/actions/runs/$RUN_ID/artifacts)"
      else
        echo "- Check the workflow artifacts for detailed Lighthouse reports"
      fi
      echo ""
    else
      echo "✅ Lighthouse CI analysis completed successfully."
      echo ""
      if [ "$REPO" != "unknown" ]; then
        echo "📋 [View Reports](https://turbocoder13.github.io/bulma-turbo-themes/lighthouse-reports/)"
      fi
    fi
  else
    echo "⚠️ No Lighthouse results found. Check workflow logs for details."
  fi

  echo ""
  echo "---"
  if [ "$RUN_ID" != "unknown" ]; then
    echo "*Generated by Lighthouse CI* | [View workflow run](https://github.com/$REPO/actions/runs/$RUN_ID)"
  else
    echo "*Generated by Lighthouse CI*"
  fi
} > lighthouse-comment.md
