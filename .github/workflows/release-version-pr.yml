---
name: Release - Version PR

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-version-pr
  cancel-in-progress: false

jobs:
  quality:
    name: 🔍 Quality Gate
    uses: ./.github/workflows/reusable-quality.yml
    permissions:
      contents: read

  build:
    name: 🏗️ Build & Test
    needs: quality
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: read
      actions: write

  version-pr:
    name: 📝 Create Version PR
    needs: [quality, build]
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af
        with:
          node-version: "22"
          registry-url: https://registry.npmjs.org
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check for existing version PR
        id: check-pr
        run: |
          existing_pr=$(gh pr list --state=open --search "chore(release): version" --json number --jq ".[0].number" 2>/dev/null || echo "")
          if [ -n "$existing_pr" ]; then
            echo "pr_exists=true" >> "$GITHUB_OUTPUT"
            echo "pr_number=$existing_pr" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create version PR
        if: steps.check-pr.outputs.pr_exists != 'true'
        run: |
          node scripts/ci/create-version-pr.mjs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "## Release Version PR Status" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check-pr.outputs.pr_exists }}" = "true" ]; then
            echo "ℹ️ Version PR already exists: #${{ steps.check-pr.outputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Version PR creation attempted" >> $GITHUB_STEP_SUMMARY
            echo "📋 Check the logs above for details" >> $GITHUB_STEP_SUMMARY
          fi
