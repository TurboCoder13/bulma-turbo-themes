---
name: Release - Auto Tag

on:
  push:
    branches: [main]
    paths:
      - "package.json"
  workflow_dispatch:
    inputs:
      version:
        description: "The version to tag (e.g., v1.2.3)"
        required: true
        type: string
      prerelease:
        description: "Is this a prerelease? (true/false)"
        required: false
        type: boolean
        default: false

permissions:
  contents: write

concurrency:
  group: release-auto-tag
  cancel-in-progress: false

jobs:
  quality:
    name: 🔍 Quality Gate
    uses: ./.github/workflows/reusable-quality.yml
    permissions:
      contents: read

  build:
    name: 🏗️ Build & Test
    needs: quality
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: read
      actions: write

  lighthouse:
    name: 📊 Lighthouse Performance
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    permissions:
      contents: read
      actions: write
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            uploads.github.com:443
            pipelines.actions.githubusercontent.com:443
            objects.githubusercontent.com:443
            codeload.github.com:443
            registry.npmjs.org:443
            npmjs.org:443
            rubygems.org:443
            api.rubygems.org:443
            index.rubygems.org:443
            bundler.rubygems.org:443
            cdn.jsdelivr.net:443
            bulma.io:443
            www.google.com:443
            android.clients.google.com:443
            chrome-devtools-frontend.appspot.com:443
            productionresultssa3.blob.core.windows.net:443

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          node-version: "22"
          ruby-version: "3.3"

      - name: Clean up any existing Jekyll processes
        run: |
          pkill -f jekyll || true
          lsof -ti:4000 | xargs kill -9 2>/dev/null || true

      - name: Run full CI pipeline with Lighthouse
        run: ./scripts/ci/run-lighthouse-ci.sh

      - name: Verify Lighthouse results
        run: ./scripts/ci/verify-lighthouse-results.sh
        env:
          LHCI_UPLOAD_TARGET: filesystem

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: lighthouse-reports
          path: lighthouse-reports
          if-no-files-found: warn
          overwrite: true

  auto-tag:
    name: 🏷️ Auto Create Release Tag
    needs: [quality, build, lighthouse]
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: ./scripts/ci/configure-git.sh

      - name: Setup Node.js
        uses: actions/setup-node@dda4788290998366da86b6a4f497909644397bb2
        with:
          node-version: "22"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check version change
        id: version-check
        run: ./scripts/ci/check-version-change.sh "${{ github.event.inputs.version }}"

      - name: Create release tag
        if: steps.version-check.outputs.version_changed == 'true' && steps.version-check.outputs.tag_exists == 'false'
        run: ./scripts/ci/create-release-tag.sh "${{ steps.version-check.outputs.current_version }}" "${{ github.event.inputs.prerelease }}"

      - name: Summary
        if: always()
        run: |
          echo "## Auto Tag Summary" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "🔧 **Manual Dispatch**" >> $GITHUB_STEP_SUMMARY
            echo "- Version: ${{ steps.version-check.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
            echo "- Prerelease: ${{ github.event.inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ steps.version-check.outputs.version_changed }}" = "false" ]; then
            echo "ℹ️ Version unchanged, no tag needed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.version-check.outputs.tag_exists }}" = "true" ]; then
            echo "ℹ️ Tag v${{ steps.version-check.outputs.current_version }} already exists" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Created tag v${{ steps.version-check.outputs.current_version }}" >> $GITHUB_STEP_SUMMARY
            echo "🚀 This will trigger the release-publish-pr workflow" >> $GITHUB_STEP_SUMMARY
          fi
