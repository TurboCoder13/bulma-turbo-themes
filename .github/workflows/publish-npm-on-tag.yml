name: Publish - npm Production

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # Write permission for creating releases
  actions: write
  id-token: write # Required for SBOM signing

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  quality:
    name: 🔍 Quality Gate
    uses: ./.github/workflows/reusable-quality.yml
    permissions:
      contents: read

  build:
    name: 🏗️ Build & Test
    needs: quality
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: read
      actions: write

  sbom:
    name: 📋 Generate & Sign SBOM
    needs: build
    uses: ./.github/workflows/reusable-sbom.yml
    permissions:
      contents: read
      actions: write
      id-token: write

  publish:
    name: 📦 Publish to npm Registry
    needs: [build, sbom]
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            objects.githubusercontent.com:443
            codeload.github.com:443
            registry.npmjs.org:443
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Node.js for npm publish
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: "22"
          registry-url: https://registry.npmjs.org
          cache: npm
      - run: npm ci
      - run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: 🚀 Create GitHub Release with SBOM
    needs: [publish, sbom]
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: write
      actions: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            uploads.github.com:443

      - name: Download SBOM artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: sbom-all-formats
          path: sbom/

      - name: Create Release with SBOM artifacts
        uses: softprops/action-gh-release@7b4da11513bf3f43f9999e90eabced41ab8bb048 # v2.2.0
        with:
          files: |
            sbom/sbom.cyclonedx.json
            sbom/sbom.cyclonedx.json.sig
            sbom/sbom.cyclonedx.json.cert
            sbom/sbom.spdx.json
            sbom/sbom.spdx.json.sig
            sbom/sbom.spdx.json.cert
            sbom/sbom.cyclonedx.xml
            sbom/sbom.cyclonedx.xml.sig
            sbom/sbom.cyclonedx.xml.cert
          body: |
            ## 📦 @turbocoder13/bulma-turbo-themes ${{ github.ref_name }}

            Published to npm: https://www.npmjs.com/package/@turbocoder13/bulma-turbo-themes

            ### 📋 Software Bill of Materials (SBOM)

            This release includes signed SBOM files in multiple formats:
            - **CycloneDX JSON**: `sbom.cyclonedx.json` (+ signature & certificate)
            - **SPDX JSON**: `sbom.spdx.json` (+ signature & certificate)
            - **CycloneDX XML**: `sbom.cyclonedx.xml` (+ signature & certificate)

            All SBOM files are signed using [Sigstore](https://www.sigstore.dev/) keyless signing.

            #### Verifying SBOM Signatures

            To verify the SBOM signatures using cosign:

            ```bash
            # Install cosign
            # See: https://docs.sigstore.dev/cosign/installation/

            # Verify a signature (example with CycloneDX JSON)
            cosign verify-blob sbom.cyclonedx.json \
              --signature=sbom.cyclonedx.json.sig \
              --certificate=sbom.cyclonedx.json.cert \
              --certificate-identity-regexp=".*" \
              --certificate-oidc-issuer-regexp=".*"
            ```

            ### 🔒 Security

            - All SBOM files are cryptographically signed
            - npm package includes [provenance attestation](https://docs.npmjs.com/generating-provenance-statements)
            - View [OpenSSF Scorecard](https://scorecard.dev/) for security metrics
          draft: false
          prerelease: false
          generate_release_notes: true
