name: Reporting - Lighthouse CI

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read
  actions: write
  pull-requests: write

concurrency:
  group: lighthouse-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lhci:
    name: üìä Lighthouse Performance Analysis
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - name: Harden Runner
        if: ${{ !env.ACT }}
        uses: step-security/harden-runner@92c522aaa6f53af082553dedc1596c80b71aba33
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            uploads.github.com:443
            pipelines.actions.githubusercontent.com:443
            results-receiver.actions.githubusercontent.com:443
            objects.githubusercontent.com:443
            codeload.github.com:443
            registry.npmjs.org:443
            npmjs.org:443
            rubygems.org:443
            api.rubygems.org:443
            index.rubygems.org:443
            bundler.rubygems.org:443
            packages.microsoft.com:443
            azure.archive.ubuntu.com:80
            azure.archive.ubuntu.com:443
            archive.ubuntu.com:80
            archive.ubuntu.com:443
            security.ubuntu.com:80
            security.ubuntu.com:443
            motd.ubuntu.com:443
            esm.ubuntu.com:443
            cdn.jsdelivr.net:443
            bulma.io:443
            www.google.com:443
            android.clients.google.com:443
            chrome-devtools-frontend.appspot.com:443
            productionresultssa3.blob.core.windows.net:443
            istanbul.js.org:443
            cdn.playwright.dev:443
            playwright.download.prss.microsoft.com:443
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          node-version: "22"
          ruby-version: "3.3"

      - name: Install Playwright browsers
        run: npm run e2e:install

      - name: Clean up any existing Jekyll processes
        run: ./scripts/ci/cleanup-jekyll-processes.sh

      - name: Run full CI pipeline with Lighthouse
        run: ./scripts/ci/run-lighthouse-ci.sh

      - name: Verify Lighthouse results
        run: ./scripts/ci/verify-lighthouse-results.sh
        env:
          LHCI_UPLOAD_TARGET: filesystem

      - name: Generate Lighthouse PR comment
        if: github.event_name == 'pull_request' && always()
        run: ./scripts/ci/generate-lighthouse-comment.sh
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Post Lighthouse comment on PR
        if: github.event_name == 'pull_request' && always()
        uses: ./.github/actions/post-pr-comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-file: lighthouse-comment.md
          marker: lighthouse-ci-comment

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: lighthouse-reports
          path: lighthouse-reports
          if-no-files-found: warn
          overwrite: true

      - name: List artifacts for debugging
        if: always()
        run: |
          echo "Contents of current directory:"
          ls -la
          echo ""
          echo "Checking for lighthouse-reports directory:"
          if [ -d "lighthouse-reports" ]; then
            echo "‚úÖ lighthouse-reports directory exists"
            find lighthouse-reports -type f
          else
            echo "‚ùå lighthouse-reports directory not found"
          fi
